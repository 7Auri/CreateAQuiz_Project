@page "/"


@layout LoginLayout
@inject HttpClient Http
@inject ILoginService Manager
@inject NavigationManager NavManager
@inject AppStateManager State
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

<EditForm Model="@auth" OnValidSubmit="@Send">
    <div class="row w-50">
        <p style="color: darkgrey !important" class="h2 text-center w-100 pb-2 text-white">WELCOME</p> <br /><br />
        <div class="col-12 d-flex flex-column ">
            <div class="input-group mb-3 ">
                <span class="input-group-text " id="basic-addon1">Email</span>
                <input @bind="auth.Email" type="text" class="form-control" placeholder="string" aria-label="Email"
                       aria-describedby="basic-addon1">
            </div>
            <div class="input-group mb-3 mt-3 ">
                <span class="input-group-text ">Password </span>
                <input @bind="auth.Password" type="password" class="form-control" placeholder="string" aria-label="Email"
                       aria-describedby="basic-addon1">
            </div>
            <div class="input-group mb-3  d-inline-flex justify-content-center">

                <button class="btn btn-primary btn-block">Login</button>
                @if (authIsError)
                {
<Alert color="danger" text="Login Failed!" style="mt-3 w-100 text-center"></Alert>}
            </div>
        </div>

    </div>
</EditForm>
    @code { UserForLoginDto auth = new() { Password = "string", Email = "string" };
                Boolean authIsError = false;
                private async Task Send()
                {



                    var result = await Manager.Login(auth);

                    if (result is not null)
                    {
                        State.user = result.Data;
                        localStorage.SetItem<User>("user", result.Data);
                        NavManager.NavigateTo("/LastPublishedContent");


                    }
                    else
                    {
                        authIsError = true;
                        auth.Password = "";
                        auth.Password = "";
                    }



                    var test = localStorage.GetItem<User>("user");


                } }
