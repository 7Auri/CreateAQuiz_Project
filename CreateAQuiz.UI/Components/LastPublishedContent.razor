@page "/LastPublishedContent"
@inject IArticleServiceUI _articleService
@using Newtonsoft.Json;



<div>
   @if (Articles == null)
   {
      <p>Loading...</p>

   }
   else
   {



      <table class="table">
         <thead>
            <tr>
               <th scope="col">#id</th>
               <th scope="col">Title</th>
               <th scope="col">Descripton</th>
               <th scope="col">Content Publish Date</th>
               <th scope="col">RSS Publish Date</th>
               <th scope="col"></th>

            </tr>
         </thead>
         <tbody>
            @foreach (var item in Articles.Data.GetRange(0, @take))
            {
               <tr>
                  <td>@item.Id</td>
                  <td>@item.Title</td>
                  <td>@item.Description</td>
                  <td>@item.PublishArticleDate</td>
                  <td>@item.PublishRssDate</td>
                 


               </tr>
            }
         </tbody>
      </table>

   }
</div>

@code {

    public IDataResult<List<Article>> Articles = null;
    [Parameter] public int take { get; set; } = 10;
    [Parameter] public bool View { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Articles= await _articleService.GetAll();
        if (Articles.Data.Count < 11)
        {
            await _articleService.Sync();
            Articles= await _articleService.GetAll();

        }
        StateHasChanged();




    }
}